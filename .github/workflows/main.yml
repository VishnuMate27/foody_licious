on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - dev
      - cicd

name: "Build & Release"

jobs:
  build:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # ðŸ”‘ Restore required files from GitHub Secrets
      - name: Restore google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > android/app/google-services.json

      - name: Restore strings.xml
        run: |
          mkdir -p android/app/src/main/res/values
          echo "${{ secrets.STRINGS_XML }}" | base64 --decode > android/app/src/main/res/values/strings.xml

      - name: Restore firebase.json
        run: |
          echo "${{ secrets.FIREBASE_JSON }}" | base64 --decode > firebase.json

      - name: Restore firebase_options.dart
        run: |
          mkdir -p lib
          echo "${{ secrets.FIREBASE_OPTIONS_DART }}" | base64 --decode > lib/firebase_options.dart

      - name: Restore .env
        run: |
          mkdir -p assets/utils
          echo "${{ secrets.DOTENV_FILE }}" | base64 --decode > assets/utils/.env

      # âœ… Verify all required assets exist before building
      - name: Verify assets
        run: |
          test -f android/app/google-services.json || (echo "google-services.json missing!" && exit 1)
          test -f android/app/src/main/res/values/strings.xml || (echo "strings.xml missing!" && exit 1)
          test -f firebase.json || (echo "firebase.json missing!" && exit 1)
          test -f lib/firebase_options.dart || (echo "firebase_options.dart missing!" && exit 1)
          test -f assets/utils/.env || (echo ".env file missing!" && exit 1)
          echo "âœ… All assets verified."

      # âœ… Build Android APK
      - name: Build Android APK
        run: flutter build apk --release --split-per-abi

      # ðŸ“¦ Upload Release Artifacts
      - name: Push to Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/apk/release/*
          tag: v1.0.${{ github.run_number }}
          token: ${{ secrets.TOKEN }}
